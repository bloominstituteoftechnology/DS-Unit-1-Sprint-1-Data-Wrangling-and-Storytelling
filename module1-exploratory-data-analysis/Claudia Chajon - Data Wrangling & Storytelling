{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Claudia:DS9:Assignment.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "MSnsTgZLKO72"
      },
      "source": [
        "# Practice Loading Datasets\n",
        "\n",
        "This assignment is purposely semi-open-ended you will be asked to load datasets both from github and also from CSV files from the [UC Irvine Machine Learning Repository](https://archive.ics.uci.edu/ml/index.php). \n",
        "\n",
        "Remember that the UCI datasets may not have a file type of `.csv` so it's important that you learn as much as you can about the dataset before you try and load it. See if you can look at the raw text of the file either locally, on github, using the `!curl` shell command, or in some other way before you try and read it in as a dataframe, this will help you catch what would otherwise be unforseen problems.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "156P6ndeKojO",
        "colab_type": "text"
      },
      "source": [
        "## 1) Load a dataset from Github (via its *RAW* URL)\n",
        "\n",
        "Pick a dataset from the following repository and load it into Google Colab. Make sure that the headers are what you would expect and check to see if missing values have been encoded as NaN values:\n",
        "\n",
        "<https://github.com/ryanleeallred/datasets>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NJdISe69ZT7E",
        "colab_type": "code",
        "outputId": "37677db2-8d14-4a4a-f67b-02f27d29a014",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 891
        }
      },
      "source": [
        "# TODO your work here!\n",
        "# And note you should write comments, descriptions, and add new\n",
        "# code and text blocks as needed\n",
        "import pandas as pd\n",
        "\n",
        "\n",
        "dataset_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'\n",
        "\n",
        "column_headers = ['age', 'workclass', 'fnlwgt', 'education', 'education-num', \n",
        "                 'marital-status', 'occupation', 'relationship', 'race', 'sex', \n",
        "                 'capital-gain', 'capital-loss', 'hours-per-week', \n",
        "                 'native-country', 'income']\n",
        "\n",
        "adults = pd.read_csv(dataset_url, names=column_headers)\n",
        "\n",
        "\n",
        "print(adults.shape)\n",
        "adults.head(15)\n",
        "  \n",
        " "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(32561, 15)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>workclass</th>\n",
              "      <th>fnlwgt</th>\n",
              "      <th>education</th>\n",
              "      <th>education-num</th>\n",
              "      <th>marital-status</th>\n",
              "      <th>occupation</th>\n",
              "      <th>relationship</th>\n",
              "      <th>race</th>\n",
              "      <th>sex</th>\n",
              "      <th>capital-gain</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>hours-per-week</th>\n",
              "      <th>native-country</th>\n",
              "      <th>income</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>39</td>\n",
              "      <td>State-gov</td>\n",
              "      <td>77516</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Adm-clerical</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>2174</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>50</td>\n",
              "      <td>Self-emp-not-inc</td>\n",
              "      <td>83311</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>38</td>\n",
              "      <td>Private</td>\n",
              "      <td>215646</td>\n",
              "      <td>HS-grad</td>\n",
              "      <td>9</td>\n",
              "      <td>Divorced</td>\n",
              "      <td>Handlers-cleaners</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>53</td>\n",
              "      <td>Private</td>\n",
              "      <td>234721</td>\n",
              "      <td>11th</td>\n",
              "      <td>7</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Handlers-cleaners</td>\n",
              "      <td>Husband</td>\n",
              "      <td>Black</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>28</td>\n",
              "      <td>Private</td>\n",
              "      <td>338409</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Wife</td>\n",
              "      <td>Black</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>Cuba</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>37</td>\n",
              "      <td>Private</td>\n",
              "      <td>284582</td>\n",
              "      <td>Masters</td>\n",
              "      <td>14</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Wife</td>\n",
              "      <td>White</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>49</td>\n",
              "      <td>Private</td>\n",
              "      <td>160187</td>\n",
              "      <td>9th</td>\n",
              "      <td>5</td>\n",
              "      <td>Married-spouse-absent</td>\n",
              "      <td>Other-service</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>Black</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>Jamaica</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>52</td>\n",
              "      <td>Self-emp-not-inc</td>\n",
              "      <td>209642</td>\n",
              "      <td>HS-grad</td>\n",
              "      <td>9</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>31</td>\n",
              "      <td>Private</td>\n",
              "      <td>45781</td>\n",
              "      <td>Masters</td>\n",
              "      <td>14</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Female</td>\n",
              "      <td>14084</td>\n",
              "      <td>0</td>\n",
              "      <td>50</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>42</td>\n",
              "      <td>Private</td>\n",
              "      <td>159449</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>5178</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>37</td>\n",
              "      <td>Private</td>\n",
              "      <td>280464</td>\n",
              "      <td>Some-college</td>\n",
              "      <td>10</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>Black</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>80</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>30</td>\n",
              "      <td>State-gov</td>\n",
              "      <td>141297</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Husband</td>\n",
              "      <td>Asian-Pac-Islander</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>India</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>23</td>\n",
              "      <td>Private</td>\n",
              "      <td>122272</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Adm-clerical</td>\n",
              "      <td>Own-child</td>\n",
              "      <td>White</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>32</td>\n",
              "      <td>Private</td>\n",
              "      <td>205019</td>\n",
              "      <td>Assoc-acdm</td>\n",
              "      <td>12</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Sales</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>Black</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>50</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>40</td>\n",
              "      <td>Private</td>\n",
              "      <td>121772</td>\n",
              "      <td>Assoc-voc</td>\n",
              "      <td>11</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Craft-repair</td>\n",
              "      <td>Husband</td>\n",
              "      <td>Asian-Pac-Islander</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>?</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    age          workclass  fnlwgt  ... hours-per-week  native-country  income\n",
              "0    39          State-gov   77516  ...             40   United-States   <=50K\n",
              "1    50   Self-emp-not-inc   83311  ...             13   United-States   <=50K\n",
              "2    38            Private  215646  ...             40   United-States   <=50K\n",
              "3    53            Private  234721  ...             40   United-States   <=50K\n",
              "4    28            Private  338409  ...             40            Cuba   <=50K\n",
              "5    37            Private  284582  ...             40   United-States   <=50K\n",
              "6    49            Private  160187  ...             16         Jamaica   <=50K\n",
              "7    52   Self-emp-not-inc  209642  ...             45   United-States    >50K\n",
              "8    31            Private   45781  ...             50   United-States    >50K\n",
              "9    42            Private  159449  ...             40   United-States    >50K\n",
              "10   37            Private  280464  ...             80   United-States    >50K\n",
              "11   30          State-gov  141297  ...             40           India    >50K\n",
              "12   23            Private  122272  ...             30   United-States   <=50K\n",
              "13   32            Private  205019  ...             50   United-States   <=50K\n",
              "14   40            Private  121772  ...             40               ?    >50K\n",
              "\n",
              "[15 rows x 15 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9nxIExAFhrgA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4hXiW_uDhrlU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "adults = adults.replace(' ?', np.NaN)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ltOgwtGthrz4",
        "colab_type": "code",
        "outputId": "0d11dc74-6745-4c5d-aa16-928e10687591",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        }
      },
      "source": [
        "adults.isnull().sum()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age                  0\n",
              "workclass         1836\n",
              "fnlwgt               0\n",
              "education            0\n",
              "education-num        0\n",
              "marital-status       0\n",
              "occupation        1843\n",
              "relationship         0\n",
              "race                 0\n",
              "sex                  0\n",
              "capital-gain         0\n",
              "capital-loss         0\n",
              "hours-per-week       0\n",
              "native-country     583\n",
              "income               0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CwwpXy4ehr2s",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "adults.head(15)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-gFnZR6iLLPY",
        "colab_type": "text"
      },
      "source": [
        "## 2) Load a dataset from your local machine\n",
        "Download a dataset from the [UC Irvine Machine Learning Repository](https://archive.ics.uci.edu/ml/index.php) and then upload the file to Google Colab either using the files tab in the left-hand sidebar or by importing `files` from `google.colab` The following link will be a useful resource if you can't remember the syntax: <https://towardsdatascience.com/3-ways-to-load-csv-files-into-colab-7c14fcbdcb92>\n",
        "\n",
        "While you are free to try and load any dataset from the UCI repository, I strongly suggest starting with one of the most popular datasets like those that are featured on the right-hand side of the home page. \n",
        "\n",
        "Some datasets on UCI will have challenges associated with importing them far beyond what we have exposed you to in class today, so if you run into a dataset that you don't know how to deal with, struggle with it for a little bit, but ultimately feel free to simply choose a different one. \n",
        "\n",
        "- Make sure that your file has correct headers, and the same number of rows and columns as is specified on the UCI page. If your dataset doesn't have headers use the parameters of the `read_csv` function to add them. Likewise make sure that missing values are encoded as `NaN`."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qUmwX-ZoM9cq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# TODO your work here!\n",
        "# And note you should write comments, descriptions, and add new\n",
        "# code and text blocks as needed\n",
        "\n",
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6MvDHsiE8got",
        "colab_type": "code",
        "outputId": "1630778c-b12b-4129-8855-213922072ffb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "df = pd.read_csv('processed.cleveland.data')\n",
        "\n",
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>63.0</th>\n",
              "      <th>1.0</th>\n",
              "      <th>1.0.1</th>\n",
              "      <th>145.0</th>\n",
              "      <th>233.0</th>\n",
              "      <th>1.0.2</th>\n",
              "      <th>2.0</th>\n",
              "      <th>150.0</th>\n",
              "      <th>0.0</th>\n",
              "      <th>2.3</th>\n",
              "      <th>3.0</th>\n",
              "      <th>0.0.1</th>\n",
              "      <th>6.0</th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>67.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>286.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>108.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>67.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>229.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>129.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>37.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>250.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>187.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>41.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>204.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>172.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>56.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>236.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>178.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   63.0  1.0  1.0.1  145.0  233.0  1.0.2  ...  0.0  2.3  3.0  0.0.1  6.0  0\n",
              "0  67.0  1.0    4.0  160.0  286.0    0.0  ...  1.0  1.5  2.0    3.0  3.0  2\n",
              "1  67.0  1.0    4.0  120.0  229.0    0.0  ...  1.0  2.6  2.0    2.0  7.0  1\n",
              "2  37.0  1.0    3.0  130.0  250.0    0.0  ...  0.0  3.5  3.0    0.0  3.0  0\n",
              "3  41.0  0.0    2.0  130.0  204.0    0.0  ...  0.0  1.4  1.0    0.0  3.0  0\n",
              "4  56.0  1.0    2.0  120.0  236.0    0.0  ...  0.0  0.8  1.0    0.0  3.0  0\n",
              "\n",
              "[5 rows x 14 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "imNh9lcf8grW",
        "colab_type": "code",
        "outputId": "487fce4d-056d-43f7-f64a-e389833d88ab",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        }
      },
      "source": [
        "column_headers = ['#3', '#4', '#9', '#10', '#12', '#16', '#19', '#32', '#38',\n",
        "                  '#40', '#41', '#44', '#51', '#58']\n",
        "\n",
        "df = pd.read_csv('processed.cleveland.data', header=None, names=column_headers)\n",
        "print(df.shape)\n",
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(303, 14)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>#3</th>\n",
              "      <th>#4</th>\n",
              "      <th>#9</th>\n",
              "      <th>#10</th>\n",
              "      <th>#12</th>\n",
              "      <th>#16</th>\n",
              "      <th>#19</th>\n",
              "      <th>#32</th>\n",
              "      <th>#38</th>\n",
              "      <th>#40</th>\n",
              "      <th>#41</th>\n",
              "      <th>#44</th>\n",
              "      <th>#51</th>\n",
              "      <th>#58</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>63.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>145.0</td>\n",
              "      <td>233.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>150.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>67.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>286.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>108.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>67.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>229.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>129.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>250.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>187.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>41.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>204.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>172.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     #3   #4   #9    #10    #12  #16  #19    #32  #38  #40  #41  #44  #51  #58\n",
              "0  63.0  1.0  1.0  145.0  233.0  1.0  2.0  150.0  0.0  2.3  3.0  0.0  6.0    0\n",
              "1  67.0  1.0  4.0  160.0  286.0  0.0  2.0  108.0  1.0  1.5  2.0  3.0  3.0    2\n",
              "2  67.0  1.0  4.0  120.0  229.0  0.0  2.0  129.0  1.0  2.6  2.0  2.0  7.0    1\n",
              "3  37.0  1.0  3.0  130.0  250.0  0.0  0.0  187.0  0.0  3.5  3.0  0.0  3.0    0\n",
              "4  41.0  0.0  2.0  130.0  204.0  0.0  2.0  172.0  0.0  1.4  1.0  0.0  3.0    0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IGYYtClR8gwO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the shape of this df is 303, 14, however UCI says the data set is 303, 75\n",
        "#which makes sense since the original data frame was slpit up by locations into multiple csvs\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mq_aQjxlM-u5",
        "colab_type": "text"
      },
      "source": [
        "## 3) Load a dataset from UCI using `!wget`\n",
        "\n",
        "\"Shell Out\" and try loading a file directly into your google colab's memory using the `!wget` command and then read it in with `read_csv`.\n",
        "\n",
        "With this file we'll do a bit more to it.\n",
        "\n",
        "- Read it in, fix any problems with the header as make sure missing values are encoded as `NaN`.\n",
        "- Use the `.fillna()` method to fill any missing values. \n",
        " - [.fillna() documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.fillna.html)\n",
        "- Create one of each of the following plots using the Pandas plotting functionality:\n",
        " - Scatterplot\n",
        " - Histogram\n",
        " - Density Plot\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tw9avHVZuhzN",
        "colab_type": "code",
        "outputId": "c80961cb-6146-4a04-86d1-4a754e85f4fa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "!wget https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data \n",
        "  "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--2019-09-30 22:06:50--  https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data\n",
            "Resolving archive.ics.uci.edu (archive.ics.uci.edu)... 128.195.10.252\n",
            "Connecting to archive.ics.uci.edu (archive.ics.uci.edu)|128.195.10.252|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 3974305 (3.8M) [application/x-httpd-php]\n",
            "Saving to: ‘adult.data.1’\n",
            "\n",
            "adult.data.1        100%[===================>]   3.79M  16.3MB/s    in 0.2s    \n",
            "\n",
            "2019-09-30 22:06:51 (16.3 MB/s) - ‘adult.data.1’ saved [3974305/3974305]\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JBTzJtdc6fmY",
        "colab_type": "code",
        "outputId": "841be456-f36f-42a5-9583-ee6052e8357c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        }
      },
      "source": [
        "column_headers = ['age', 'workclass', 'fnlwgt', 'education', 'education-num', \n",
        "                 'marital-status', 'occupation', 'relationship', 'race', 'sex', \n",
        "                 'capital-gain', 'capital-loss', 'hours-per-week', \n",
        "                 'native-country', 'income']\n",
        "\n",
        "df = pd.read_csv('adult.data', names=column_headers)\n",
        "print(df.shape)\n",
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(32561, 15)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>workclass</th>\n",
              "      <th>fnlwgt</th>\n",
              "      <th>education</th>\n",
              "      <th>education-num</th>\n",
              "      <th>marital-status</th>\n",
              "      <th>occupation</th>\n",
              "      <th>relationship</th>\n",
              "      <th>race</th>\n",
              "      <th>sex</th>\n",
              "      <th>capital-gain</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>hours-per-week</th>\n",
              "      <th>native-country</th>\n",
              "      <th>income</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>39</td>\n",
              "      <td>State-gov</td>\n",
              "      <td>77516</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Adm-clerical</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>2174</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>50</td>\n",
              "      <td>Self-emp-not-inc</td>\n",
              "      <td>83311</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>38</td>\n",
              "      <td>Private</td>\n",
              "      <td>215646</td>\n",
              "      <td>HS-grad</td>\n",
              "      <td>9</td>\n",
              "      <td>Divorced</td>\n",
              "      <td>Handlers-cleaners</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>53</td>\n",
              "      <td>Private</td>\n",
              "      <td>234721</td>\n",
              "      <td>11th</td>\n",
              "      <td>7</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Handlers-cleaners</td>\n",
              "      <td>Husband</td>\n",
              "      <td>Black</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>28</td>\n",
              "      <td>Private</td>\n",
              "      <td>338409</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Wife</td>\n",
              "      <td>Black</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>Cuba</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   age          workclass  fnlwgt  ... hours-per-week  native-country  income\n",
              "0   39          State-gov   77516  ...             40   United-States   <=50K\n",
              "1   50   Self-emp-not-inc   83311  ...             13   United-States   <=50K\n",
              "2   38            Private  215646  ...             40   United-States   <=50K\n",
              "3   53            Private  234721  ...             40   United-States   <=50K\n",
              "4   28            Private  338409  ...             40            Cuba   <=50K\n",
              "\n",
              "[5 rows x 15 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZRZDwDie7U8L",
        "colab_type": "code",
        "outputId": "2e2c9361-0d6f-460d-e4ae-08c34f2c7aa8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        }
      },
      "source": [
        "import numpy as np\n",
        "df = df.replace({' ?': np.NaN})\n",
        "df.head(10)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>workclass</th>\n",
              "      <th>fnlwgt</th>\n",
              "      <th>education</th>\n",
              "      <th>education-num</th>\n",
              "      <th>marital-status</th>\n",
              "      <th>occupation</th>\n",
              "      <th>relationship</th>\n",
              "      <th>race</th>\n",
              "      <th>sex</th>\n",
              "      <th>capital-gain</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>hours-per-week</th>\n",
              "      <th>native-country</th>\n",
              "      <th>income</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>39</td>\n",
              "      <td>State-gov</td>\n",
              "      <td>77516</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Adm-clerical</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>2174</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>50</td>\n",
              "      <td>Self-emp-not-inc</td>\n",
              "      <td>83311</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>38</td>\n",
              "      <td>Private</td>\n",
              "      <td>215646</td>\n",
              "      <td>HS-grad</td>\n",
              "      <td>9</td>\n",
              "      <td>Divorced</td>\n",
              "      <td>Handlers-cleaners</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>53</td>\n",
              "      <td>Private</td>\n",
              "      <td>234721</td>\n",
              "      <td>11th</td>\n",
              "      <td>7</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Handlers-cleaners</td>\n",
              "      <td>Husband</td>\n",
              "      <td>Black</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>28</td>\n",
              "      <td>Private</td>\n",
              "      <td>338409</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Wife</td>\n",
              "      <td>Black</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>Cuba</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>37</td>\n",
              "      <td>Private</td>\n",
              "      <td>284582</td>\n",
              "      <td>Masters</td>\n",
              "      <td>14</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Wife</td>\n",
              "      <td>White</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>49</td>\n",
              "      <td>Private</td>\n",
              "      <td>160187</td>\n",
              "      <td>9th</td>\n",
              "      <td>5</td>\n",
              "      <td>Married-spouse-absent</td>\n",
              "      <td>Other-service</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>Black</td>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>Jamaica</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>52</td>\n",
              "      <td>Self-emp-not-inc</td>\n",
              "      <td>209642</td>\n",
              "      <td>HS-grad</td>\n",
              "      <td>9</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>31</td>\n",
              "      <td>Private</td>\n",
              "      <td>45781</td>\n",
              "      <td>Masters</td>\n",
              "      <td>14</td>\n",
              "      <td>Never-married</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Not-in-family</td>\n",
              "      <td>White</td>\n",
              "      <td>Female</td>\n",
              "      <td>14084</td>\n",
              "      <td>0</td>\n",
              "      <td>50</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>42</td>\n",
              "      <td>Private</td>\n",
              "      <td>159449</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>5178</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&gt;50K</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   age          workclass  fnlwgt  ... hours-per-week  native-country  income\n",
              "0   39          State-gov   77516  ...             40   United-States   <=50K\n",
              "1   50   Self-emp-not-inc   83311  ...             13   United-States   <=50K\n",
              "2   38            Private  215646  ...             40   United-States   <=50K\n",
              "3   53            Private  234721  ...             40   United-States   <=50K\n",
              "4   28            Private  338409  ...             40            Cuba   <=50K\n",
              "5   37            Private  284582  ...             40   United-States   <=50K\n",
              "6   49            Private  160187  ...             16         Jamaica   <=50K\n",
              "7   52   Self-emp-not-inc  209642  ...             45   United-States    >50K\n",
              "8   31            Private   45781  ...             50   United-States    >50K\n",
              "9   42            Private  159449  ...             40   United-States    >50K\n",
              "\n",
              "[10 rows x 15 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D5f_f-qs76DV",
        "colab_type": "code",
        "outputId": "f5cb0b2a-8870-439c-e384-68f466ed77a9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>fnlwgt</th>\n",
              "      <th>education-num</th>\n",
              "      <th>capital-gain</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>hours-per-week</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>32561.000000</td>\n",
              "      <td>3.256100e+04</td>\n",
              "      <td>32561.000000</td>\n",
              "      <td>32561.000000</td>\n",
              "      <td>32561.000000</td>\n",
              "      <td>32561.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>38.581647</td>\n",
              "      <td>1.897784e+05</td>\n",
              "      <td>10.080679</td>\n",
              "      <td>1077.648844</td>\n",
              "      <td>87.303830</td>\n",
              "      <td>40.437456</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13.640433</td>\n",
              "      <td>1.055500e+05</td>\n",
              "      <td>2.572720</td>\n",
              "      <td>7385.292085</td>\n",
              "      <td>402.960219</td>\n",
              "      <td>12.347429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>17.000000</td>\n",
              "      <td>1.228500e+04</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>28.000000</td>\n",
              "      <td>1.178270e+05</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>40.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>37.000000</td>\n",
              "      <td>1.783560e+05</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>40.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>48.000000</td>\n",
              "      <td>2.370510e+05</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>45.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>90.000000</td>\n",
              "      <td>1.484705e+06</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>99999.000000</td>\n",
              "      <td>4356.000000</td>\n",
              "      <td>99.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                age        fnlwgt  ...  capital-loss  hours-per-week\n",
              "count  32561.000000  3.256100e+04  ...  32561.000000    32561.000000\n",
              "mean      38.581647  1.897784e+05  ...     87.303830       40.437456\n",
              "std       13.640433  1.055500e+05  ...    402.960219       12.347429\n",
              "min       17.000000  1.228500e+04  ...      0.000000        1.000000\n",
              "25%       28.000000  1.178270e+05  ...      0.000000       40.000000\n",
              "50%       37.000000  1.783560e+05  ...      0.000000       40.000000\n",
              "75%       48.000000  2.370510e+05  ...      0.000000       45.000000\n",
              "max       90.000000  1.484705e+06  ...   4356.000000       99.000000\n",
              "\n",
              "[8 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bTvWBRqk7_5X",
        "colab_type": "code",
        "outputId": "778884ad-c297-437e-f092-97b09377ada0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 173
        }
      },
      "source": [
        "df.describe(exclude = 'number')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>workclass</th>\n",
              "      <th>education</th>\n",
              "      <th>marital-status</th>\n",
              "      <th>occupation</th>\n",
              "      <th>relationship</th>\n",
              "      <th>race</th>\n",
              "      <th>sex</th>\n",
              "      <th>native-country</th>\n",
              "      <th>income</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>30725</td>\n",
              "      <td>32561</td>\n",
              "      <td>32561</td>\n",
              "      <td>30718</td>\n",
              "      <td>32561</td>\n",
              "      <td>32561</td>\n",
              "      <td>32561</td>\n",
              "      <td>31978</td>\n",
              "      <td>32561</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>8</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>14</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>41</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>Private</td>\n",
              "      <td>HS-grad</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Prof-specialty</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>United-States</td>\n",
              "      <td>&lt;=50K</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>22696</td>\n",
              "      <td>10501</td>\n",
              "      <td>14976</td>\n",
              "      <td>4140</td>\n",
              "      <td>13193</td>\n",
              "      <td>27816</td>\n",
              "      <td>21790</td>\n",
              "      <td>29170</td>\n",
              "      <td>24720</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       workclass education       marital-status  ...    sex  native-country  income\n",
              "count      30725     32561                32561  ...  32561           31978   32561\n",
              "unique         8        16                    7  ...      2              41       2\n",
              "top      Private   HS-grad   Married-civ-spouse  ...   Male   United-States   <=50K\n",
              "freq       22696     10501                14976  ...  21790           29170   24720\n",
              "\n",
              "[4 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xfhvFl0U91qK",
        "colab_type": "code",
        "outputId": "0e7ee2cc-b98e-4990-bc4a-07ba0a26c49c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        }
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age                  0\n",
              "workclass         1836\n",
              "fnlwgt               0\n",
              "education            0\n",
              "education-num        0\n",
              "marital-status       0\n",
              "occupation        1843\n",
              "relationship         0\n",
              "race                 0\n",
              "sex                  0\n",
              "capital-gain         0\n",
              "capital-loss         0\n",
              "hours-per-week       0\n",
              "native-country     583\n",
              "income               0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NgIn_6At8gT7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "#wanted to fill any NaNs with the mean of each category\n",
        "#values = {'workclass': 'Private', 'education': 'HS-grad', 'native-country': 'United-States'}\n",
        "\n",
        "#df.fillna(value=values)\n",
        "#df.head(50)\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j1Az4TQcOFWA",
        "colab_type": "code",
        "outputId": "43513951-7500-4b22-ce81-ae36d0ef53e0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        }
      },
      "source": [
        "df['age'].value_counts().plot()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f9fdef96fd0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nfONYLp4/mTte2sipv3qBl9Y15LosNcg09JUqYhVBHz869xDuu2IBXsvi4juWct2DK2lqj+a6NDVI\nNPSVKnK/fW49tz3/PpVBLwD3L9vK6Te9QEdED/IOR95cF6CUyq3lm/by7FrnVijzp45gTGWQCdUl\nBLy6Tzgc6f9VpYrc7y45gqtOnI4lsLM5xOWLpvKd02dhWZLr0tQg0NBXqsh5PRbXfmwm93xxAeGY\nzSdvfZnbnn8fW+/TMyxp6CulAJg/bSSPX30sp8wey8/+910++/vXqNcnbw07GvpKqaSqUh+/vWge\nP/vEoSz/YC+n3fQi/1y9M9dlqQGkoa+USiMiLD6qln98fREHVAa5/K5l/ODhdwhF9Wye4UBDXymV\n1fQx5fztymO4fNFU7nzlA06/6UWeXrNTH71Y4DT0lVLdCng9fO/M2fzpsvmIwGV3LuPSP7zO+vqW\nXJem+klDXym1T4tmjOKJa47l+2fOZsXmvZz6qxe5/pFVer+eAqShr5TqFZ/H4rJFU3nuW8ez+MhJ\n3PXKJj7z30vZ2xbJdWmqDzT0lVJ9MrI8wE/OO5RbLz6C1dubOf93r/BhY0euy1K9pKGvlOqXUw8+\ngLu+cBQ7m0J88taXtZ+/QGjoK6X6bcG0kdz3paOJ2YZP3faKPpClAGjoK6X2y+zxlfz1y8dQVeLj\nwttf5ZGVH+a6JNUDDX2l1H6rHVnKX79yDHMmVnPVPSv4+ePvEtd79+QlDX2l1IAYVR7gT5fP5zPz\na7n1uff54l3LaAnpw1jyjYa+UmrA+L0WPz3vUH507iG88N4uzvvtyzz+znZ2t4ZzXZpy6UNUlFID\n7pIFk5k+upyv/eUNvvynNwA4cHQZR00dwbzaGqaNLmfqqDJqSn2I6H37h5Lkw3006urqzLJly3Jd\nhlJqgEViNm9va+S1jXt5beNuln2wl5ZQ51W8lUEvU0eVceohB3D5omn49WldfSIiy40xdX1aR0Nf\nKTVU4rZhY0Mbmxra2LS7jY0Nbazd0cKyD/YyfUw5Pz3vUI6aOiLXZRaM/oS+du8opYaMxxKmjyln\n+pjytOnPvLuT7/99FZ/+3StcUDeJ754xi+pSf46qHN409JVSOXfirLEsuHYkN/1zHUte2sj/vrOd\ng8dXMaGmhAnV7o87PK46SMDryXXJBUtDXymVF0r9Xr57xkc4Z+4Elry4gU2723hx3S7qW8J01wt9\n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\nRK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YSkjmY6COFY4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GKGcFsVZKDJy",
        "colab_type": "code",
        "outputId": "ce97aa81-856e-4a28-f1d5-52d77ffb8463",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        }
      },
      "source": [
        "df.plot.scatter('age', 'education-num', color='lime');\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nE0EQBMGA8/8DmXSKuJr8KnYAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lWkO0H5kF_IQ",
        "colab_type": "code",
        "outputId": "7d31fe67-512f-4a57-9007-dfa05e5ca4a5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        }
      },
      "source": [
        "df['education-num'].hist(bins=20, color='fuchsia'); "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nqlgOkqTK/wEu9JWmu53u0AAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s-YNgA1vJfSv",
        "colab_type": "code",
        "outputId": "40c51986-fc38-4349-9801-9e73ffd9d5e3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        }
      },
      "source": [
        "df['education-num'].plot.density(color='fuchsia');"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_s7ebLDPQUEu",
        "colab_type": "code",
        "outputId": "f6162502-5a48-4b77-fe21-ae1d23b6c99d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "pd.crosstab(df['marital-status'], df['race'])"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>race</th>\n",
              "      <th>Amer-Indian-Eskimo</th>\n",
              "      <th>Asian-Pac-Islander</th>\n",
              "      <th>Black</th>\n",
              "      <th>Other</th>\n",
              "      <th>White</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>marital-status</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Divorced</th>\n",
              "      <td>60</td>\n",
              "      <td>75</td>\n",
              "      <td>485</td>\n",
              "      <td>26</td>\n",
              "      <td>3797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Married-AF-spouse</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Married-civ-spouse</th>\n",
              "      <td>116</td>\n",
              "      <td>508</td>\n",
              "      <td>837</td>\n",
              "      <td>105</td>\n",
              "      <td>13410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Married-spouse-absent</th>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>62</td>\n",
              "      <td>15</td>\n",
              "      <td>291</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Never-married</th>\n",
              "      <td>103</td>\n",
              "      <td>372</td>\n",
              "      <td>1346</td>\n",
              "      <td>105</td>\n",
              "      <td>8757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Separated</th>\n",
              "      <td>11</td>\n",
              "      <td>19</td>\n",
              "      <td>265</td>\n",
              "      <td>13</td>\n",
              "      <td>717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Widowed</th>\n",
              "      <td>12</td>\n",
              "      <td>24</td>\n",
              "      <td>128</td>\n",
              "      <td>7</td>\n",
              "      <td>822</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "race                     Amer-Indian-Eskimo  ...   White\n",
              "marital-status                               ...        \n",
              " Divorced                                60  ...    3797\n",
              " Married-AF-spouse                        0  ...      22\n",
              " Married-civ-spouse                     116  ...   13410\n",
              " Married-spouse-absent                    9  ...     291\n",
              " Never-married                          103  ...    8757\n",
              " Separated                               11  ...     717\n",
              " Widowed                                 12  ...     822\n",
              "\n",
              "[7 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mBT0GVPNQUJy",
        "colab_type": "code",
        "outputId": "e8175253-7efa-4bac-8a80-ed6b1125bd0e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        }
      },
      "source": [
        "pd.crosstab(df['marital-status'], df['race']).plot();"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HAtz_vtpQUHs",
        "colab_type": "code",
        "outputId": "a9f26b24-269d-4382-9553-9baefbed4191",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "pd.crosstab(df['native-country'], df['workclass'])"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>workclass</th>\n",
              "      <th>Federal-gov</th>\n",
              "      <th>Local-gov</th>\n",
              "      <th>Never-worked</th>\n",
              "      <th>Private</th>\n",
              "      <th>Self-emp-inc</th>\n",
              "      <th>Self-emp-not-inc</th>\n",
              "      <th>State-gov</th>\n",
              "      <th>Without-pay</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>native-country</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Cambodia</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Canada</th>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>79</td>\n",
              "      <td>6</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>China</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Columbia</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cuba</th>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dominican-Republic</th>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ecuador</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>El-Salvador</th>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>88</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>England</th>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>63</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>France</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Germany</th>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>97</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Greece</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Guatemala</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Haiti</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Holand-Netherlands</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Honduras</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hong</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hungary</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>India</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Iran</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ireland</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Italy</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Jamaica</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Japan</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Laos</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mexico</th>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>553</td>\n",
              "      <td>8</td>\n",
              "      <td>27</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nicaragua</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Outlying-US(Guam-USVI-etc)</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Peru</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Philippines</th>\n",
              "      <td>12</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>155</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Poland</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Portugal</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Puerto-Rico</th>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Scotland</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>South</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>43</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Taiwan</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Thailand</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Trinadad&amp;Tobago</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>United-States</th>\n",
              "      <td>886</td>\n",
              "      <td>1956</td>\n",
              "      <td>7</td>\n",
              "      <td>20135</td>\n",
              "      <td>991</td>\n",
              "      <td>2313</td>\n",
              "      <td>1210</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Vietnam</th>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>53</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Yugoslavia</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "workclass                     Federal-gov   Local-gov  ...   State-gov   Without-pay\n",
              "native-country                                         ...                          \n",
              " Cambodia                               1           0  ...           0             0\n",
              " Canada                                 2           6  ...           3             0\n",
              " China                                  1           3  ...           9             0\n",
              " Columbia                               2           0  ...           1             0\n",
              " Cuba                                   2           4  ...           0             0\n",
              " Dominican-Republic                     0           3  ...           0             0\n",
              " Ecuador                                0           1  ...           0             0\n",
              " El-Salvador                            2           5  ...           0             0\n",
              " England                                4           5  ...           3             0\n",
              " France                                 1           3  ...           1             0\n",
              " Germany                                5           9  ...           5             0\n",
              " Greece                                 0           1  ...           0             0\n",
              " Guatemala                              1           3  ...           0             0\n",
              " Haiti                                  0           4  ...           2             0\n",
              " Holand-Netherlands                     0           0  ...           0             0\n",
              " Honduras                               0           1  ...           1             0\n",
              " Hong                                   0           1  ...           2             0\n",
              " Hungary                                0           0  ...           0             0\n",
              " India                                  2           2  ...          12             0\n",
              " Iran                                   2           2  ...           1             0\n",
              " Ireland                                0           0  ...           0             0\n",
              " Italy                                  1           2  ...           2             0\n",
              " Jamaica                                0           4  ...           2             0\n",
              " Japan                                  3           1  ...           2             0\n",
              " Laos                                   1           1  ...           0             0\n",
              " Mexico                                 1          18  ...           3             0\n",
              " Nicaragua                              1           2  ...           1             0\n",
              " Outlying-US(Guam-USVI-etc)             0           1  ...           1             0\n",
              " Peru                                   0           1  ...           0             0\n",
              " Philippines                           12          10  ...           3             1\n",
              " Poland                                 1           3  ...           0             0\n",
              " Portugal                               1           1  ...           1             0\n",
              " Puerto-Rico                            8           7  ...           4             0\n",
              " Scotland                               0           0  ...           1             0\n",
              " South                                  1           0  ...           0             0\n",
              " Taiwan                                 0           2  ...           6             0\n",
              " Thailand                               0           0  ...           1             0\n",
              " Trinadad&Tobago                        0           1  ...           1             0\n",
              " United-States                        886        1956  ...        1210            13\n",
              " Vietnam                                2           3  ...           1             0\n",
              " Yugoslavia                             0           1  ...           0             0\n",
              "\n",
              "[41 rows x 8 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "odR_OUPbRFIC",
        "colab_type": "code",
        "outputId": "98a9ed50-cafe-4a83-991d-0d2d6120594a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        }
      },
      "source": [
        "pd.crosstab(df['native-country'], df['workclass']).plot();\n",
        "\n",
        "#kind of a terrible graph..."
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MZCxTwKuReV9",
        "colab_type": "text"
      },
      "source": [
        "## Stretch Goals - Other types and sources of data\n",
        "\n",
        "Not all data comes in a nice single file - for example, image classification involves handling lots of image files. You still will probably want labels for them, so you may have tabular data in addition to the image blobs - and the images may be reduced in resolution and even fit in a regular csv as a bunch of numbers.\n",
        "\n",
        "If you're interested in natural language processing and analyzing text, that is another example where, while it can be put in a csv, you may end up loading much larger raw data and generating features that can then be thought of in a more standard tabular fashion.\n",
        "\n",
        "Overall you will in the course of learning data science deal with loading data in a variety of ways. Another common way to get data is from a database - most modern applications are backed by one or more databases, which you can query to get data to analyze. We'll cover this more in our data engineering unit.\n",
        "\n",
        "How does data get in the database? Most applications generate logs - text files with lots and lots of records of each use of the application. Databases are often populated based on these files, but in some situations you may directly analyze log files. The usual way to do this is with command line (Unix) tools - command lines are intimidating, so don't expect to learn them all at once, but depending on your interests it can be useful to practice.\n",
        "\n",
        "One last major source of data is APIs: https://github.com/toddmotto/public-apis\n",
        "\n",
        "API stands for Application Programming Interface, and while originally meant e.g. the way an application interfaced with the GUI or other aspects of an operating system, now it largely refers to online services that let you query and retrieve data. You can essentially think of most of them as \"somebody else's database\" - you have (usually limited) access.\n",
        "\n",
        "*Stretch goal* - research one of the above extended forms of data/data loading. See if you can get a basic example working in a notebook. Image, text, or (public) APIs are probably more tractable - databases are interesting, but there aren't many publicly accessible and they require a great deal of setup."
      ]
    }
  ]
}
